# -*- coding: utf-8 -*-
"""6 лаба введение в специальность

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/128E_JDHMHXP-Uo9T-FxG8D2qAUfz_LJ4
"""

celsius=[[-67.0],[-34.0],[0],[34.0],[54.0],[67.0],[100]]
fahrenheit=[[-88.6],[-29.2],[32.0],[93.2],[129.2],[152.6],[212.0]]
kelvin=[[206.4833],[239.2611],[273.15],[307.0389],[327.03889],[339.81667],[373.15]]

import matplotlib.pyplot as plt

plt.figure(figsize=(15,8),dpi=50)
plt.scatter(celsius,fahrenheit,label='входные  значения', color='green',marker='$f$');
plt.xlabel('celsius')
plt.ylabel('fahrenheit')
plt.legend()
plt.grid(True)
plt.show()

for c,f in zip(celsius,fahrenheit):
  print(f'цельсия{c}=фаренгейт{f}')

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(celsius,fahrenheit)
lr.predict([[256],[123]])
lr.coef_
lr.intercept_
celsius_test=[[-50],[10],[30],[20],[10],[70],[87]]
fahrenheit_test=lr.predict(celsius_test)
fahrenheit_test

for c,f in zip(celsius_test,fahrenheit_test):
  print(f'цельсия{c} фаренгейта{f}')

import numpy as np
x_range=np.arange(-70,120)
y_range=x_range*1.8+32

plt.figure(figsize=(15,8),dpi=280)
plt.plot(x_range,y_range,label='уравнение', linewidth='1')
plt.scatter(celsius,fahrenheit,label='входные  значения', color='green');
plt.scatter(celsius_test,fahrenheit_test,label='предсказанное значение', color='blue');
plt.xlabel('Цельсия')
plt.ylabel('Фаренгейта')
plt.legend()
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt

plt.figure(figsize=(15,8),dpi=50)
plt.scatter(fahrenheit,kelvin,label='входные  значения', color='green',marker='$f$');
plt.xlabel('fahrenheit')
plt.ylabel('kelvin')
plt.legend()
plt.grid(True)
plt.show()

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(fahrenheit,kelvin)
lr.predict([[256],[123]])
lr.coef_
lr.intercept_
fahrenheit_test=[[-50],[10],[30],[20],[10],[70],[87]]
kelvin_test=lr.predict(fahrenheit_test)
kelvin_test

import numpy as np
x_range=np.arange(-100,212)
y_range=(x_range+459.67)*(5/9)

plt.figure(figsize=(15,8),dpi=280)
plt.plot(x_range,y_range,label='уравнение', linewidth='1')
plt.scatter(fahrenheit,kelvin,label='входные  значения', color='green');
plt.scatter(fahrenheit_test,kelvin_test,label='предсказанное значение', color='blue');
plt.xlabel('Фаренгейта')
plt.ylabel('Кельвин')
plt.legend()
plt.grid(True)
plt.show()

x = np.arange(-2*np.pi,2*np.pi,0.01)
y = np.sin(3*x)/x
y2 = np.sin(2*x)/x
y3 = np.sin(x)/x
plt.plot(x,y,color='b')
plt.plot(x,y2,color='r')
plt.plot(x,y3,color='g')
plt.xticks([-2*np.pi,-np.pi,0, np.pi, 2*np.pi],
           [r'$-2\pi$',r'$-\pi$',r'$0$',r'$+\pi$',r'$+2\pi$'])
plt.yticks([-1,0,1,2,3],
           [r'$-1$',r'$0$',r'$+1$',r'$+2$',r'$+3$'])
plt.show()

import pandas as pd

data = {'series1':[1,3,4,3,5],
        'series2':[2,4,5,2,4],
        'series3':[3,2,3,1,3]}
df = pd.DataFrame(data)
x = np.arange(5)
plt.axis([0,5,0,7])
plt.plot(x,df)
plt.legend(data, loc=2)
plt.show()

labels = ['Xiaomi','Samsung','Apple','Honor']
values = [10,30,45,15]
colors = ['yellow','green','red','blue']
explode = [0,0,0,0]
plt.title('Pie chart-percentage of users of phones of 4 top brands')
plt.pie(values,labels=labels,colors=colors,explode=explode,shadow=True,autopct='%1.1f%%',startangle=180)
plt.axis('equal')
plt.show()

import math

math.pi

math.e

math.nan

math.factorial(int(input()))

number1 = int(input())
number2 =int(input())
gcd = math.gcd(number1, number2)
print(gcd)